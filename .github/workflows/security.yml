name: 🔒 Security Scan

on:
  schedule:
    # 每周一上午 9:00 (UTC) 运行安全扫描
    - cron: '0 9 * * 1'
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # 🔍 依赖漏洞扫描
  dependency-scan:
    name: 🔍 Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🔍 NPM Audit
      run: |
        echo "🔍 运行 NPM 安全审计..."
        npm audit --audit-level moderate --json > npm-audit.json || true
        
    - name: 📊 NPM Audit Report
      uses: oke-py/npm-audit-action@v2
      with:
        audit_level: moderate
        github_token: ${{ secrets.GITHUB_TOKEN }}
        issue_assignees: DLshujin
        issue_labels: security,dependencies
        
    - name: 🔒 Snyk Security Scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=medium --json > snyk-report.json
        
    - name: 📤 Upload Snyk Report
      uses: github/codeql-action/upload-sarif@v2
      if: hashFiles('snyk-report.json') != ''
      with:
        sarif_file: snyk-report.json

  # 🔎 代码安全扫描
  code-scan:
    name: 🔎 Code Security Analysis
    runs-on: ubuntu-latest
    
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔎 Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        queries: security-extended,security-and-quality
        
    - name: 🏗️ Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: 🔎 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:javascript"

  # 🛡️ 密钥泄露检查
  secret-scan:
    name: 🛡️ Secret Leakage Detection
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🛡️ TruffleHog Secrets Scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  # 🔐 License 合规检查
  license-scan:
    name: 🔐 License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🔐 License Check
      run: |
        npx license-checker --summary --onlyAllow 'MIT;ISC;Apache-2.0;BSD-2-Clause;BSD-3-Clause;Apache-2.0 WITH LLVM-exception' > license-report.txt || true
        
    - name: 📤 Upload License Report
      uses: actions/upload-artifact@v3
      with:
        name: license-report
        path: license-report.txt

  # 🌐 Web 安全扫描
  web-security-scan:
    name: 🌐 Web Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build application
      run: npm run build
      
    - name: 🌐 Start development server
      run: |
        npm run preview &
        echo $! > server.pid
        sleep 30
        
    - name: 🔍 OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: 'http://localhost:4173'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
        
    - name: 🛑 Stop development server
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid)
          rm server.pid
        fi

  # 📋 安全报告汇总
  security-report:
    name: 📋 Security Report Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, secret-scan, license-scan]
    if: always()
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: security-reports/
        
    - name: 📋 Generate Security Summary
      run: |
        echo "# 🔒 安全扫描报告" > security-summary.md
        echo "" >> security-summary.md
        echo "**扫描时间:** $(date)" >> security-summary.md
        echo "**分支:** ${{ github.ref_name }}" >> security-summary.md
        echo "**提交:** ${{ github.sha }}" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "## 📊 扫描结果" >> security-summary.md
        echo "| 扫描类型 | 状态 | 详情 |" >> security-summary.md
        echo "|---------|------|------|" >> security-summary.md
        echo "| 依赖漏洞扫描 | ${{ needs.dependency-scan.result == 'success' && '✅ 通过' || '❌ 失败' }} | 检查第三方依赖的已知漏洞 |" >> security-summary.md
        echo "| 代码安全分析 | ${{ needs.code-scan.result == 'success' && '✅ 通过' || '❌ 失败' }} | 静态代码安全分析 |" >> security-summary.md
        echo "| 密钥泄露检查 | ${{ needs.secret-scan.result == 'success' && '✅ 通过' || '❌ 失败' }} | 检查代码中的敏感信息泄露 |" >> security-summary.md
        echo "| 许可证合规检查 | ${{ needs.license-scan.result == 'success' && '✅ 通过' || '❌ 失败' }} | 检查依赖许可证合规性 |" >> security-summary.md
        
        echo "" >> security-summary.md
        echo "## 📋 建议措施" >> security-summary.md
        echo "- 定期更新依赖包到最新版本" >> security-summary.md
        echo "- 关注安全漏洞公告" >> security-summary.md
        echo "- 遵循安全编码规范" >> security-summary.md
        echo "- 定期进行安全审计" >> security-summary.md
        
    - name: 📤 Upload Security Summary
      uses: actions/upload-artifact@v3
      with:
        name: security-summary
        path: security-summary.md
        
    - name: 💬 Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('security-summary.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });

  # 📧 安全通知
  security-notification:
    name: 📧 Security Notification
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, secret-scan]
    if: failure()
    
    steps:
    - name: 📧 Send security alert
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "🚨 安全扫描发现问题 - 教务管理系统"
        to: adilei.shujin@gmail.com
        from: Security Alert <security@github.com>
        html_body: |
          <h2>🚨 安全扫描警报</h2>
          <p><strong>项目:</strong> 教务管理系统</p>
          <p><strong>分支:</strong> ${{ github.ref_name }}</p>
          <p><strong>扫描时间:</strong> ${{ github.run_started_at }}</p>
          <p><strong>工作流:</strong> <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">查看详情</a></p>
          
          <h3>📋 扫描结果:</h3>
          <ul>
            <li>依赖漏洞扫描: ${{ needs.dependency-scan.result }}</li>
            <li>代码安全分析: ${{ needs.code-scan.result }}</li>
            <li>密钥泄露检查: ${{ needs.secret-scan.result }}</li>
          </ul>
          
          <p><strong>⚠️ 请及时查看并处理发现的安全问题！</strong></p>
          
          <hr>
          <p>此邮件由 GitHub Actions 安全扫描自动发送</p>